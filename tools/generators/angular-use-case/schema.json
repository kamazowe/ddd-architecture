{
  "$schema": "http://json-schema.org/schema",
  "cli": "nx",
  "$id": "angular-use-case",
  "type": "object",
  "properties": {
    "name": {
      "type": "string",
      "description": "The name of the library",
      "$default": {
        "$source": "argv",
        "index": 0
      },
      "pattern": "^[a-zA-Z].*$",
      "x-prompt": "What name would you like to use for the library?"
    },
    "directory": {
      "type": "string",
      "description": "A directory where the library is placed",
      "default": "client/use-cases"
    },
    "componentName": {
      "type": "string",
      "description": "The name of the component",
      "$default": {
        "$source": "argv",
        "index": 1
      }
    },
    "tags": {
      "type": "array",
      "description": "Add tags to the library (used for linting)",
      "$default": {
        "$source": "argv",
        "index": 2
      }
    },
    "prefix": {
      "type": "string",
      "description": "The prefix to apply to generated selectors",
      "$default": {
        "$source": "argv",
        "index": 3
      }
    },
    "style": {
      "type": "string",
      "description": "The file extension or preprocessor to use for style files, or `none` to skip generating the style file.",
      "enum": ["css", "scss", "sass", "less", "none"],
      "default": "scss"
    },
    "changeDetection": {
      "type": "string",
      "description": "",
      "default": "OnPush",
      "enum": ["Default", "OnPush"]
    },
    "export": {
      "type": "boolean",
      "description": "Specifies if the component should be exported in the declaring `NgModule`. Additionally, if the project is a library, the component will be exported from the project's entry point (normally `index.ts`) if the module it belongs to is also exported or if the component is standalone.",
      "default": true
    },
    "displayBlock": {
      "type": "boolean",
      "description": "Specifies if the component generated style will contain `:host { display: block; }`. Disclaimer: This option is only valid when `--standalone` is set to `true`",
      "default": true
    },
    "standalone": {
      "type": "boolean",
      "description": "Generate a library that uses a standalone component instead of a module as the entry point.",
      "default": true
    }
  },
  "required": ["name"]
}
